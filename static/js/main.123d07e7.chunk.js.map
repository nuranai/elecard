{"version":3,"sources":["store/slices/catalogSlice.js","components/Spinner.js","components/Card.js","components/Main.js","store/slices/viewSLice.js","components/Header.js","components/Footer.js","components/Image.js","components/TreeBranch.js","components/Tree.js","App.js","store/store.js","index.js"],"names":["initialState","cardElements","JSON","parse","localStorage","elemets","elements","loading","error","categories","saveToLocalStorage","state","stringify","fetchCatalog","createAsyncThunk","a","fetch","response","json","data","Error","catalogSlice","createSlice","name","reducers","sortElements","action","sort","b","payload","sortType","sortDirection","deleteElement","index","findIndex","elem","image","splice","resetCards","extraReducers","builder","addCase","pending","fulfilled","Array","from","reduce","acc","val","add","category","Set","rejected","message","actions","Spinner","className","Card","element","dispatch","useDispatch","onClick","src","alt","Date","timestamp","toUTCString","filesize","Tree","useState","elementPaginationStart","setElementPaginationStart","catalog","useSelector","useEffect","slice","map","onPageChange","selected","console","log","pageCount","length","containerClassName","pageLinkClassName","activeLinkClassName","nextLinkClassName","previousLinkClassName","breakLinkClassName","viewSlice","changeView","Header","onChange","e","target","value","id","type","defaultChecked","htmlFor","Footer","setSortType","setSortDirection","view","sortTypeHandler","sortDirectionHandler","checked","Image","url","showFullImage","setShowFullImage","changeImageView","TreeBranch","treeBranchHandler","filter","classList","toggle","nextElementSibling","App","configureStore","reducer","catalogReducer","viewReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.123d07e7.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\nconst initialState = {\n  cardElements: JSON.parse(localStorage.elemets ?? '[]'),\n  elements: [],\n  loading: false,\n  error: null,\n  categories: []\n}\n\n\nfunction saveToLocalStorage(state) {\n  localStorage.elemets = JSON.stringify(state)\n}\n\n\nexport const fetchCatalog = createAsyncThunk('catalog/fetchCatalog', async () => {\n  try {\n    const response = await fetch('http://contest.elecard.ru/frontend_data/catalog.json')\n    const data = await response.json()\n    return data\n  } catch (error) {\n    throw Error(error)\n  }\n})\n\nconst catalogSlice = createSlice({\n  name: \"catalog\",\n  initialState,\n  reducers: {\n    sortElements(state, action) {\n      state.cardElements.sort((a, b) => {\n        if (a[action.payload.sortType] < b[action.payload.sortType]) { return action.payload.sortDirection === 'ascend' ? -1 : 1 }\n        if (a[action.payload.sortType] > b[action.payload.sortType]) { return action.payload.sortDirection === 'ascend' ? 1 : -1 }\n        return 0\n      }\n      )\n    },\n    deleteElement(state, action) {\n      const index = state.cardElements.findIndex(elem => elem.image === action.payload)\n      state.cardElements.splice(index, 1)\n      saveToLocalStorage(state.cardElements)\n    },\n    resetCards(state, action) {\n      state.cardElements = state.elements\n      saveToLocalStorage(state.elements)\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCatalog.pending, (state, action) => {\n      state.loading = true\n      state.error = null\n    })\n      .addCase(fetchCatalog.fulfilled, (state, action) => {\n        state.elements = action.payload\n        state.loading = false\n        if (!state.cardElements[0]) state.cardElements = state.elements\n        state.categories = Array.from(action.payload.reduce((acc, val) => acc.add(val.category), new Set()))\n      })\n      .addCase(fetchCatalog.rejected, (state, action) => {\n        state.loading = false\n        state.error = action.error.message\n      })\n  }\n})\n\nexport default catalogSlice.reducer\n\nexport const { sortElements, deleteElement, resetCards } = catalogSlice.actions","export default function Spinner() {\n  return (\n    <div className=\"spinner_background\">\n      <div className=\"spinner_wrapper\">\n        <div className=\"spinner\"></div>\n      </div>\n    </div>\n  )\n}","import { deleteElement } from \"../store/slices/catalogSlice\"\nimport { useDispatch } from 'react-redux'\n\nexport default function Card({ element }) {\n\n  const dispatch = useDispatch()\n\n  return (\n    <li className=\"card\">\n      <button onClick={() => dispatch(deleteElement(element.image))}>X</button>\n      <img src={`http://contest.elecard.ru/frontend_data/${element.image}`} alt={element.image} />\n      <p>Image name: {element.image}</p>\n      <p>Image Date: {new Date(element.timestamp).toUTCString()}</p>\n      <p>Image Size: {element.filesize}</p>\n    </li>\n  )\n}","import { useState, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { fetchCatalog } from \"../store/slices/catalogSlice\"\nimport Spinner from './Spinner'\nimport ReactPaginate from \"react-paginate\"\nimport Card from \"./Card\"\n\n\nexport default function Tree() {\n  const [elementPaginationStart, setElementPaginationStart] = useState(0)\n\n  const dispatch = useDispatch()\n\n  const catalog = useSelector(state => state.catalog)\n  \n  useEffect(() => {\n    // if (!catalog.elements[0]) {\n      dispatch(fetchCatalog())\n    // }\n    // console.log('hello')\n    //   dispatch(fetchCatalog())\n  }, [])\n\n  return (\n    <div className=\"page_wrapper\">\n\n      {catalog.loading ? <Spinner /> : null}\n      <ul className=\"card_wrapper\">\n        {catalog.cardElements.slice(elementPaginationStart, elementPaginationStart + 50).map((elem, index) =>\n          <Card element={elem} key={index} />\n        )}\n      </ul>\n\n      <ReactPaginate\n        onPageChange={({ selected }) => { setElementPaginationStart(selected * 50); console.log(selected * 50) }}\n        pageCount={catalog.elements.length / 50}\n        containerClassName={'pagination__container'}\n        pageLinkClassName={'pagination__page'}\n        activeLinkClassName={'pagination__active'}\n        nextLinkClassName={'pagination__page pagination__button'}\n        previousLinkClassName={'pagination__page pagination__button'}\n        breakLinkClassName={'pagination__page'}\n      />\n    </div>\n  )\n}","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = 'card'\n\nconst viewSlice = createSlice({\n  name: 'view',\n  initialState,\n  reducers: {\n    changeView(state, action) {\n      state = action.payload\n      return state\n    }\n  }\n})\n\nexport default viewSlice.reducer\n\nexport const { changeView } = viewSlice.actions","import { useDispatch } from \"react-redux\"\nimport { changeView } from \"../store/slices/viewSLice\"\n\nexport default function Header() {\n  const dispatch = useDispatch()\n\n  return (\n    <header>\n      <div>\n        <input onChange={(e)=> dispatch(changeView(e.target.value))} id=\"card\" type=\"radio\" name=\"view_type\" value=\"card\" defaultChecked />\n        <label htmlFor=\"card\">Card</label>\n      </div>\n      <div>\n        <input onChange={(e)=> dispatch(changeView(e.target.value))} id=\"tree\" type=\"radio\" name=\"view_type\" value=\"tree\" />\n        <label htmlFor=\"tree\">Tree</label>\n      </div>\n    </header>\n  )\n}","import { useState, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { sortElements, resetCards } from \"../store/slices/catalogSlice\"\n\nexport default function Footer() {\n  const [sortType, setSortType] = useState(\"image\")\n  const [sortDirection, setSortDirection] = useState(\"ascend\")\n  const view = useSelector(state => state.view)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(sortElements({ sortType, sortDirection }))\n  }, [sortType, sortDirection])\n\n  const sortTypeHandler = (e) => setSortType(state => state = e.target.value)\n\n  const sortDirectionHandler = (e) => setSortDirection(e.target.value)\n\n  const resetHandler = () => {\n    dispatch(resetCards())\n    setSortType('image')\n    setSortDirection('ascend')\n  }\n\n  return (\n    <footer>\n      {view === 'card'\n        ? <>\n          <div>\n            <span>Sort Type:</span>\n            <input\n              onChange={sortTypeHandler}\n              id=\"name\"\n              type=\"radio\"\n              name=\"sort-type\"\n              value=\"image\"\n              checked={sortType === 'image'} />\n            <label htmlFor=\"name\">Name</label>\n            <input\n              onChange={sortTypeHandler}\n              id=\"date\"\n              type=\"radio\"\n              name=\"sort-type\"\n              value=\"timestamp\"\n            />\n            <label htmlFor=\"date\">Date</label>\n            <input\n              onChange={sortTypeHandler}\n              id=\"category\"\n              type=\"radio\"\n              name=\"sort-type\"\n              value=\"category\"\n            />\n            <label htmlFor=\"category\">Category</label>\n            <input\n              onChange={sortTypeHandler}\n              id=\"size\"\n              type=\"radio\"\n              name=\"sort-type\"\n              value=\"filesize\"\n            />\n            <label htmlFor=\"size\">Size</label>\n          </div>\n          <div>\n            <span>Sort Direction:</span>\n            <input\n              onChange={sortDirectionHandler}\n              id=\"ascend\"\n              type=\"radio\"\n              name=\"sort-dir\"\n              value=\"ascend\"\n              checked={sortDirection === 'ascend'} />\n            <label htmlFor=\"ascend\">Ascending</label>\n            <input\n              onChange={sortDirectionHandler}\n              id=\"descend\"\n              type=\"radio\"\n              name=\"sort-dir\"\n              value=\"descend\"\n            />\n            <label htmlFor=\"descend\">Descending</label>\n          </div>\n          <button onClick={resetHandler}>Reset</button>\n        </>\n        : null\n      }\n    </footer>\n  )\n}","import { useState } from \"react\"\n\nexport default function Image({ url }) {\n  const [showFullImage, setShowFullImage] = useState(false)\n\n  const changeImageView = () => {setShowFullImage(!showFullImage)}\n\n  return (\n    <>\n      <img className=\"thumbnail\" src={url} onClick={changeImageView} alt='thumbnail'/>\n      {showFullImage\n        ? <div className=\"modal_content\" onClick={changeImageView}>\n          <h1 className=\"modal_close\" >X</h1>\n          <img className=\"full_img\" src={url} alt=\"full\"/>\n        </div>\n        : null}\n    </>\n  )\n}","import { useSelector } from \"react-redux\"\nimport Image from \"./Image\"\n\nexport default function TreeBranch({ category, treeBranchHandler }) {\n  const catalog = useSelector(state => state.catalog)\n  \n  return (\n    <li>\n      <span onClick={treeBranchHandler} className=\"carrier\">{category}</span>\n      <ul className=\"nested\">\n        {\n          catalog.elements\n            .filter(val => val.category === category)\n            .map((val, index) => <li key={index}>\n              <Image url={`http://contest.elecard.ru/frontend_data/${val.image}`}/>\n            </li>\n            )\n        }\n      </ul>\n    </li>\n  )\n}","import { useSelector } from 'react-redux'\nimport TreeBranch from './TreeBranch'\n\nexport default function Tree() {\n  const catalog = useSelector(state => state.catalog)\n\n  const treeBranchHandler = (e) => {\n    e.target.classList.toggle('carrier_active')\n    e.target.nextElementSibling.classList.toggle(\"active\")\n  }\n\n  return (\n    <div className=\"page_wrapper\">\n      <ul className=\"tree_root\">\n        <li><span onClick={treeBranchHandler} className=\"carrier\">Catalog:</span>\n          <ul className=\"nested\">\n            {\n              catalog.categories\n                .map(val => <TreeBranch key={val} category={val} treeBranchHandler={treeBranchHandler} />)\n            }\n          </ul>\n        </li>\n      </ul>\n    </div>\n  )\n}","import { useSelector } from \"react-redux\";\nimport Main from \"./components/Main\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport './styles/styles.css'\nimport Tree from \"./components/Tree\";\n\nfunction App() {\n  const view = useSelector(state => state.view)\n\n  return (\n    <div>\n      <Header />\n      {view === 'card' ? <Main /> : <Tree />}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport catalogReducer from \"./slices/catalogSlice\";\nimport viewReducer from './slices/viewSLice'\n\nexport default configureStore({\n  reducer: {\n    catalog: catalogReducer,\n    view: viewReducer\n  }\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store/store';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}